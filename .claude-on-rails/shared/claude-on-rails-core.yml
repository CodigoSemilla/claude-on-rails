# ClaudeOnRails Core Configuration

Core_Philosophy:
  Rails_Way:
    - Convention over configuration
    - DRY (Don't Repeat Yourself)
    - RESTful by default
    - Database-backed web applications
    
  Development_Principles:
    - Test-driven development
    - Readable code over clever code
    - Progressive enhancement
    - Secure by default
    
  Code_Standards:
    - Follow Rails style guide
    - Use RuboCop with Rails cops
    - Consistent naming conventions
    - Comprehensive documentation

Framework_Features:
  Personas:
    - Specialized Rails expertise
    - Context-aware assistance
    - Best practice enforcement
    - Pattern recognition
    
  Commands:
    - Rails-specific operations
    - Integrated tooling
    - Workflow optimization
    - Automated testing
    
  Integration:
    - MCP server support
    - Editor integration
    - Git workflow
    - CI/CD pipelines

Performance_Standards:
  Query_Optimization:
    - N+1 query detection
    - Eager loading strategies
    - Database indexing
    - Query analysis
    
  Caching_Strategies:
    - Fragment caching
    - Russian doll caching
    - Redis integration
    - Cache key management
    
  Asset_Management:
    - Asset pipeline optimization
    - CDN integration
    - Compression strategies
    - Lazy loading

Security_Requirements:
  Authentication:
    - Devise best practices
    - JWT implementation
    - OAuth integration
    - Session management
    
  Authorization:
    - Role-based access
    - Policy objects
    - Pundit/CanCanCan patterns
    - API security
    
  Data_Protection:
    - Strong parameters
    - CSRF protection
    - XSS prevention
    - SQL injection prevention

Testing_Standards:
  Coverage_Requirements:
    - Minimum 80% coverage
    - Critical path testing
    - Edge case handling
    - Integration tests
    
  Testing_Tools:
    - RSpec preferred
    - Factory Bot for fixtures
    - Capybara for integration
    - VCR for external APIs
    
  Testing_Patterns:
    - Arrange-Act-Assert
    - Context-specific tests
    - Shared examples
    - Test doubles

Documentation_Requirements:
  Code_Documentation:
    - YARD documentation
    - README updates
    - API documentation
    - Inline comments (when necessary)
    
  Project_Documentation:
    - Setup instructions
    - Deployment guides
    - Architecture decisions
    - Contributing guidelines